{"ts":1366736880701,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"require 'test_helper'\n\nclass UserTest < ActiveSupport::TestCase\n  # test \"the truth\" do\n  #   assert true\n  # end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":118}]],"length":118}
{"contributors":[],"silentsave":false,"ts":1366737048677,"patch":[[{"diffs":[[0,"se\n "],[-1," #"],[0," test \""],[-1,"the truth"],[1,"a user should enter a first name"],[0,"\" do\n  "],[-1,"#   assert true\n  # end"],[1,"    user = User.new\n      assert !user.save"],[0,"\nend"]],"start1":61,"start2":61,"length1":56,"length2":97}]],"length":159,"saved":false}
{"ts":1366737110196,"patch":[[{"diffs":[[0,"er.save\n"],[1,"      assert !user.errors[:first_name].empty?\n"],[0,"end\n"]],"start1":147,"start2":147,"length1":12,"length2":58}]],"length":205,"saved":false}
{"ts":1366737239781,"patch":[[{"diffs":[[0,".empty?\n"],[1,"  end\n  \n  test \"a user should enter a first name\" do\n      user = User.new\n      assert !user.save\n      assert !user.errors[:first_name].empty?\n  end\n  \n  test \"a user should enter a first name\" do\n      user = User.new\n      assert !user.save\n      assert !user.errors[:first_name].empty?\n  end\n"],[0,"end\n"]],"start1":193,"start2":193,"length1":12,"length2":310}]],"length":503,"saved":false}
{"ts":1366737255923,"patch":[[{"diffs":[[0,"t !user.errors[:"],[-1,"fir"],[1,"la"],[0,"st_name].empty?\n"]],"start1":312,"start2":312,"length1":35,"length2":34},{"diffs":[[0,"t !user.errors[:"],[-1,"first"],[1,"profile"],[0,"_name].empty?\n  "]],"start1":457,"start2":457,"length1":37,"length2":39}]],"length":504,"saved":false}
{"ts":1366738623177,"patch":[[{"diffs":[[0," should enter a "],[-1,"fir"],[1,"la"],[0,"st name\" do\n    "]],"start1":224,"start2":224,"length1":35,"length2":34},{"diffs":[[0," should enter a "],[-1,"first"],[1,"profile"],[0," name\" do\n      "]],"start1":368,"start2":368,"length1":37,"length2":39}]],"length":505,"saved":false}
{"ts":1366739607140,"patch":[[{"diffs":[[0,"name].empty?"],[1," \n        #checks if there's an error on the first name field\n        #by making sure errors object contains errors"],[0,"\n  end\nend\n"]],"start1":482,"start2":482,"length1":23,"length2":138}]],"length":620,"saved":false}
{"ts":1366743714236,"patch":[[{"diffs":[[0,"ssert !user.save"],[1," #fails"],[0,"\n"],[-1,""],[0,"      assert !us"]],"start1":430,"start2":430,"length1":33,"length2":40},{"diffs":[[0," if "],[-1,"there's an error on the first name field\n        #by making sure e"],[1,"error obj contains a profile_name error\n        #because it wasn't filled out.\n        #E"],[0,"rror"],[-1,"s"],[0," object "],[-1,"contain"],[1,"is NOT empty (full) because prior to the \n        #validation, user"],[0,"s "],[1,"w"],[0,"er"],[-1,"rors"],[1,"e created without a first name"],[0,"\n  e"]],"start1":518,"start2":518,"length1":102,"length2":211}]],"length":736,"saved":false}
{"ts":1366744508731,"patch":[[{"diffs":[[0," object "],[1,"on profile_name field "],[0,"is NOT e"]],"start1":615,"start2":615,"length1":16,"length2":38},{"diffs":[[0,"T empty "],[1,"\n        #"],[0,"(full) b"]],"start1":650,"start2":650,"length1":16,"length2":26}]],"length":768,"saved":false}
{"ts":1366746310984,"patch":[[{"diffs":[[0,"e\n  end\n"],[1,"  \n  test\n"],[0,"end\n"]],"start1":756,"start2":756,"length1":12,"length2":22}]],"length":778,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366769153361,"patch":[[{"diffs":[[0,"test"],[1," \"a user should have a unique profile name\" do\n        user = User.new\n        user.profile_name = 'jasonseifer'\n        user.email = 'jason@teamtreehouse.com'\n        user.first_name = 'Jason'\n        user.last_name = 'Seifer'\n        user.password = 'password'\n        user.password_confirmation = 'password'\n        assert !user.save\n        assert !user.errors[:profile_name].empty?\n  end"],[0,"\nend"],[1,"s"],[0,"\n"]],"start1":769,"start2":769,"length1":9,"length2":402}]],"length":1171,"saved":false}
{"ts":1366770054841,"patch":[[{"diffs":[[0," end\nend"],[-1,"s"],[0,"\n"]],"start1":1161,"start2":1161,"length1":10,"length2":9}]],"length":1170,"saved":false}
{"ts":1366770176198,"patch":[[{"diffs":[[0,"er'\n"],[-1,"        user.password = 'password'\n        user.password_confirmation = 'password'"],[0,"\n   "]],"start1":997,"start2":997,"length1":90,"length2":8}]],"length":1088,"saved":false}
{"ts":1366770240998,"patch":[[{"diffs":[[0,"Seifer'\n"],[1,"        user.password = 'password'\n        user.password_confirmation = 'password'"],[0,"\n       "]],"start1":993,"start2":993,"length1":16,"length2":98}]],"length":1170,"saved":false}
{"ts":1366770250085,"patch":[[{"diffs":[[0,"Seifer'\n        "],[1,"#"],[0,"user.password = "]],"start1":993,"start2":993,"length1":32,"length2":33},{"diffs":[[0,"rd'\n        "],[1,"#"],[0,"user.passwor"]],"start1":1033,"start2":1033,"length1":24,"length2":25}]],"length":1172,"saved":false}
{"ts":1366770272385,"patch":[[{"diffs":[[0,"Seifer'\n        "],[-1,"#"],[0,"user.password = "]],"start1":993,"start2":993,"length1":33,"length2":32},{"diffs":[[0,"        "],[-1,"#"],[0,"user.pas"]],"start1":1036,"start2":1036,"length1":17,"length2":16}]],"length":1170,"saved":false}
{"ts":1366770780049,"patch":[[{"diffs":[[0,"t !user.save"],[1," "],[0,"\n        ass"]],"start1":1097,"start2":1097,"length1":24,"length2":25}]],"length":1171,"saved":false}
{"ts":1366771073042,"patch":[[{"diffs":[[0,"e = "],[-1,"'jasonseifer'\n        user.email = 'jason@teamtreehouse.com'\n        user.first_name = 'Jason'\n        user.last_name = 'Seifer'\n        user.password = 'password'\n        user.password_confirmation = 'password'"],[1,"user(:jason)\n        \n        "],[0,"\n   "]],"start1":868,"start2":868,"length1":219,"length2":38}]],"length":990,"saved":false}
{"ts":1366771177566,"patch":[[{"diffs":[[0,"(:jason)"],[-1,"\n        "],[1,".profile_name"],[0,"\n       "]],"start1":876,"start2":876,"length1":25,"length2":29}]],"length":994,"saved":false}
{"ts":1366771302462,"patch":[[{"diffs":[[0,"e = user"],[1,"s"],[0,"(:jason)"]],"start1":868,"start2":868,"length1":16,"length2":17}]],"length":995,"saved":false}
{"ts":1366771655826,"patch":[[{"diffs":[[0,"y? \n"],[-1,"        #checks if error obj contains a profile_name error\n        #because it wasn't filled out.\n        #Error object on profile_name field is NOT empty \n        #(full) because prior to the \n        #validation, users were created without a first name\n"],[0,"  en"]],"start1":499,"start2":499,"length1":263,"length2":8}]],"length":740,"saved":false}
{"ts":1366771957993,"patch":[[{"diffs":[[0,".empty? "],[1,"#will fail \n      #(error obj will be empty) until we validate the presence\n      #of the profile name"],[0,"\n  end\n "]],"start1":494,"start2":494,"length1":16,"length2":118}]],"length":842,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366823328168,"patch":[[{"diffs":[[0,"?\n  end\n"],[1,"  \n  test \"a user should have a profile name without spaces\" do\n    user = User.new\n    user.profile_name = \"My profile With Spaces\"\n    \n    assert !user.save\n    assert !user.errors[:profile_name].empty?\n    assert user.errors[:profile_name].include?(\"Must be formatted correctly.\")\n  end\n"],[0,"end\n"]],"start1":830,"start2":830,"length1":12,"length2":303}]],"length":1133,"saved":false}
{"ts":1366823423757,"patch":[[{"diffs":[[0,"].empty?"],[1," #fails (erros obj is empty)\n    #initially because we can create users who \n    #have profile names with empty spaces. "],[0,"\n    ass"]],"start1":1035,"start2":1035,"length1":16,"length2":136}]],"length":1253,"saved":false}
{"ts":1366823429460,"patch":[[{"diffs":[[0,"ls (erro"],[-1,"s"],[1,"r"],[0," obj is "]],"start1":1048,"start2":1048,"length1":17,"length2":17}]],"length":1253,"saved":false}
{"ts":1366824229611,"patch":[[{"diffs":[[0,"ty? "],[-1,"#fails (error obj is empty)\n    #initially because we can create users who \n    #have profile names with empty spaces. "],[0,"\n   "]],"start1":1040,"start2":1040,"length1":127,"length2":8}]],"length":1134,"saved":false}
{"ts":1366824260217,"patch":[[{"diffs":[[0,".empty? "],[1,"#fails (error obj is empty)\n    #initially because we can create users who \n    #have profile names with empty spaces. "],[0,"\n    ass"]],"start1":1036,"start2":1036,"length1":16,"length2":135}]],"length":1253,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366912898147,"patch":[[{"diffs":[[0,"stCase\n "],[1," #"],[0," test \"a"]],"start1":57,"start2":57,"length1":16,"length2":18},{"diffs":[[0,"first name\" do\n "],[1," #"],[0,"     user = User"]],"start1":96,"start2":96,"length1":32,"length2":34},{"diffs":[[0,"ser = User.new\n "],[1," #"],[0,"     assert !use"]],"start1":120,"start2":120,"length1":32,"length2":34},{"diffs":[[0,"ert !user.save\n "],[1," #"],[0,"     assert !use"]],"start1":146,"start2":146,"length1":32,"length2":34},{"diffs":[[0,"t_name].empty?\n "],[1," #"],[0," end\n  \n  test \""]],"start1":194,"start2":194,"length1":32,"length2":34},{"diffs":[[0,"ty?\n  # end\n  \n "],[1," #"],[0," test \"a user sh"]],"start1":205,"start2":205,"length1":32,"length2":34},{"diffs":[[0," last name\" do\n "],[1," #"],[0,"     user = User"]],"start1":251,"start2":251,"length1":32,"length2":34},{"diffs":[[0,"ser = User.new\n "],[1," #"],[0,"     assert !use"]],"start1":275,"start2":275,"length1":32,"length2":34},{"diffs":[[0,"r.save\n "],[1," #"],[0,"     ass"]],"start1":309,"start2":309,"length1":16,"length2":18},{"diffs":[[0,"t_name].empty?\n "],[1," #"],[0," end\n  \n  test \""]],"start1":348,"start2":348,"length1":32,"length2":34},{"diffs":[[0,"ty?\n  # end\n  \n "],[1," #"],[0," test \"a user sh"]],"start1":359,"start2":359,"length1":32,"length2":34},{"diffs":[[0,"e name\" do\n "],[1," #"],[0,"     user = "]],"start1":412,"start2":412,"length1":24,"length2":26},{"diffs":[[0,"= User.new\n "],[1," #"],[0,"     assert "]],"start1":436,"start2":436,"length1":24,"length2":26},{"diffs":[[0,"#fails\n "],[1," #"],[0,"     ass"]],"start1":473,"start2":473,"length1":16,"length2":18},{"diffs":[[0," fail \n "],[1," #"],[0,"     #(e"]],"start1":535,"start2":535,"length1":16,"length2":18},{"diffs":[[0,"esence\n "],[1," #"],[0,"     #of"]],"start1":601,"start2":601,"length1":16,"length2":18},{"diffs":[[0,"e name\n "],[1," #"],[0," end\n  \n"]],"start1":630,"start2":630,"length1":16,"length2":18},{"diffs":[[0,"ame\n  # end\n  \n "],[1," #"],[0," test \"a user sh"]],"start1":633,"start2":633,"length1":32,"length2":34},{"diffs":[[0,"me\" do\n "],[1," #"],[0,"       u"]],"start1":696,"start2":696,"length1":16,"length2":18},{"diffs":[[0,"er.new\n "],[1," #"],[0,"       u"]],"start1":722,"start2":722,"length1":16,"length2":18},{"diffs":[[0,"      \n "],[1," #"],[0,"       a"]],"start1":788,"start2":788,"length1":16,"length2":18},{"diffs":[[0,".save \n "],[1," #"],[0,"       a"]],"start1":817,"start2":817,"length1":16,"length2":18},{"diffs":[[0,"empty?\n "],[1," #"],[0," end\n  \n"]],"start1":869,"start2":869,"length1":16,"length2":18},{"diffs":[[0,"end\n  \n "],[1," #"],[0," test \"a"]],"start1":880,"start2":880,"length1":16,"length2":18},{"diffs":[[0,"es\" do\n "],[1," #"],[0,"   user "]],"start1":943,"start2":943,"length1":16,"length2":18},{"diffs":[[0,"er.new\n "],[1," #"],[0,"   user."]],"start1":965,"start2":965,"length1":16,"length2":18},{"diffs":[[0,"\"\n    \n "],[1," #"],[0,"   asser"]],"start1":1021,"start2":1021,"length1":16,"length2":18},{"diffs":[[0,"r.save\n "],[1," #"],[0,"   asser"]],"start1":1045,"start2":1045,"length1":16,"length2":18},{"diffs":[[0,"empty)\n "],[1," #"],[0,"   #init"]],"start1":1121,"start2":1121,"length1":16,"length2":18},{"diffs":[[0,"s who \n "],[1," #"],[0,"   #have"]],"start1":1171,"start2":1171,"length1":16,"length2":18},{"diffs":[[0,"aces. \n "],[1," #"],[0,"   asser"]],"start1":1217,"start2":1217,"length1":16,"length2":18},{"diffs":[[0,"tly.\")\n "],[1," #"],[0," end\nend"]],"start1":1298,"start2":1298,"length1":16,"length2":18}]],"length":1317,"saved":false}
{"ts":1366914564150,"patch":[[{"diffs":[[0,"stCase\n "],[-1," #"],[0," test \"a"]],"start1":57,"start2":57,"length1":18,"length2":16},{"diffs":[[0,"first name\" do\n "],[-1," #"],[0,"     user = User"]],"start1":94,"start2":94,"length1":34,"length2":32},{"diffs":[[0,"ser = User.new\n "],[-1," #"],[0,"     assert !use"]],"start1":116,"start2":116,"length1":34,"length2":32},{"diffs":[[0,"ert !user.save\n "],[-1," #"],[0,"     assert !use"]],"start1":140,"start2":140,"length1":34,"length2":32},{"diffs":[[0,"t_name].empty?\n "],[-1," #"],[0," end\n  \n  # test"]],"start1":186,"start2":186,"length1":34,"length2":32},{"diffs":[[0,"mpty?\n  end\n  \n "],[-1," #"],[0," test \"a user sh"]],"start1":195,"start2":195,"length1":34,"length2":32},{"diffs":[[0," last name\" do\n "],[-1," #"],[0,"     user = User"]],"start1":239,"start2":239,"length1":34,"length2":32},{"diffs":[[0,"ser = User.new\n "],[-1," #"],[0,"     assert !use"]],"start1":261,"start2":261,"length1":34,"length2":32},{"diffs":[[0,"r.save\n "],[-1," #"],[0,"     ass"]],"start1":293,"start2":293,"length1":18,"length2":16},{"diffs":[[0,"t_name].empty?\n "],[-1," #"],[0," end\n  \n  # test"]],"start1":330,"start2":330,"length1":34,"length2":32},{"diffs":[[0,"mpty?\n  end\n  \n "],[-1," #"],[0," test \"a user sh"]],"start1":339,"start2":339,"length1":34,"length2":32},{"diffs":[[0,"e name\" do\n "],[-1," #"],[0,"     user = "]],"start1":390,"start2":390,"length1":26,"length2":24},{"diffs":[[0,"= User.new\n "],[-1," #"],[0,"     assert "]],"start1":412,"start2":412,"length1":26,"length2":24},{"diffs":[[0,"#fails\n "],[-1," #"],[0,"     ass"]],"start1":447,"start2":447,"length1":18,"length2":16},{"diffs":[[0," fail \n "],[-1," #"],[0,"     #(e"]],"start1":507,"start2":507,"length1":18,"length2":16},{"diffs":[[0,"esence\n "],[-1," #"],[0,"     #of"]],"start1":571,"start2":571,"length1":18,"length2":16},{"diffs":[[0,"e name\n "],[-1," #"],[0," end\n  \n"]],"start1":598,"start2":598,"length1":18,"length2":16},{"diffs":[[0," name\n  end\n  \n "],[-1," #"],[0," test \"a user sh"]],"start1":599,"start2":599,"length1":34,"length2":32},{"diffs":[[0,"me\" do\n "],[-1," #"],[0,"       u"]],"start1":660,"start2":660,"length1":18,"length2":16},{"diffs":[[0,"er.new\n "],[-1," #"],[0,"       u"]],"start1":684,"start2":684,"length1":18,"length2":16},{"diffs":[[0,"      \n "],[-1," #"],[0,"       a"]],"start1":748,"start2":748,"length1":18,"length2":16},{"diffs":[[0,".save \n "],[-1," #"],[0,"       a"]],"start1":775,"start2":775,"length1":18,"length2":16},{"diffs":[[0,"empty?\n "],[-1," #"],[0," end\n  \n"]],"start1":825,"start2":825,"length1":18,"length2":16},{"diffs":[[0,"end\n  \n "],[-1," #"],[0," test \"a"]],"start1":834,"start2":834,"length1":18,"length2":16},{"diffs":[[0,"es\" do\n "],[-1," #"],[0,"   user "]],"start1":895,"start2":895,"length1":18,"length2":16},{"diffs":[[0,"er.new\n "],[-1," #"],[0,"   user."]],"start1":915,"start2":915,"length1":18,"length2":16},{"diffs":[[0,"\"\n    \n "],[-1," #"],[0,"   asser"]],"start1":969,"start2":969,"length1":18,"length2":16},{"diffs":[[0,"r.save\n "],[-1," #"],[0,"   asser"]],"start1":991,"start2":991,"length1":18,"length2":16},{"diffs":[[0,"empty)\n "],[-1," #"],[0,"   #init"]],"start1":1065,"start2":1065,"length1":18,"length2":16},{"diffs":[[0,"s who \n "],[-1," #"],[0,"   #have"]],"start1":1113,"start2":1113,"length1":18,"length2":16},{"diffs":[[0,"aces. \n "],[-1," #"],[0,"   asser"]],"start1":1157,"start2":1157,"length1":18,"length2":16},{"diffs":[[0,"tly.\")\n "],[-1," #"],[0," end\nend"]],"start1":1236,"start2":1236,"length1":18,"length2":16}]],"length":1253,"saved":false}
